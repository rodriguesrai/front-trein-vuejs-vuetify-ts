name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - TREIN-11/instance-ec2

env:
  IMG_NAME: front-trein-vuejs-vuetify-ts

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:unit --passWithNoTests

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Login to Github Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.IMG_NAME }}:${{ github.sha }} .
          docker tag ghcr.io/${{ github.repository_owner }}/${{ env.IMG_NAME }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/${{ env.IMG_NAME }}:latest

      - name: List Docker images
        run: docker images

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMG_NAME }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMG_NAME }}:latest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker container stop ${{ env.IMG_NAME }} || true
            sudo docker container rm ${{ env.IMG_NAME }} || true
            echo "${{ secrets.GH_TOKEN }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "--- Pulling image from GitHub Registry ---"
            sudo docker pull ghcr.io/${{ github.actor }}/${{ env.IMG_NAME }}:latest

            sudo docker run -d \
              --name ${{ env.IMG_NAME }} \
              -p ${{ secrets.FRONT_PORT}}:${{ secrets.FRONT_PORT}} \
              -e VITE_DEFAULT_LOCALE=${{ secrets.VITE_DEFAULT_LOCALE }} \
              -e VITE_FALLBACK_LOCALE=${{ secrets.VITE_FALLBACK_LOCALE }} \
              ghcr.io/${{ github.actor }}/${{ env.IMG_NAME }}
